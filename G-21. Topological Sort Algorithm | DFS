Topological Sort only exists in DAG(Directed Acyclic Graph).
Linear ordering of vertices such that if there is an edge between u and v, u appears before v in that ordering.

class Solution{
    private:
        void dfs(int V, vector<int> adj[], int sv, vector<int>& visited, stack<int>& st){
            visited[sv] = 1;
            for(auto node: adj[sv]){
                if(visited[node]){
                    continue;
                }if(!visited[node])dfs(V, adj, node, visited, st);
            }st.push(sv);
        }
	public:
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    stack<int> st;
	    vector<int> visited(V,0);
	    for(int i = 0; i<V; i++){
	        if(visited[i]==0)dfs( V, adj, i, visited, st);
	    }vector<int> ans;
	    while(!st.empty()){
	        ans.push_back(st.top());
	        st.pop();
	    }return ans;
	}
};
